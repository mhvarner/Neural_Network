# How many neurons and layers did you select for your neural network model? Why?
I used 2 hidden layers in my deep neural network with 8 nodes in the first hidden layer (hidden_nodes_layer1 =  8) and 5 nodes in the second hidden layer (hidden_nodes_layer1 =  5). I did this many hidden layers to produce a more accurate neural network because in models with less layers and nodes, the accuracy went down when I trained lower amounts. 
# Were you able to achieve the target model performance? What steps did you take to try and increase model performance?
I was able to achieve almost a 100% target model performance after training and retraining my model sets in my neural network (8575/1 - 1s - loss: 0.0076 - accuracy: 1.0000 - Loss: 0.007793251844313072, Accuracy: 1.0) with only a ~ .0076 loss which. I increased my performance by importing checkpoint dependencies and then retraining the previous model I used in order to go from (8575/1 - 1s - loss: 1.8578e-04 - accuracy: 1.0000 - Loss: 0.00018571372448538672, Accuracy: 1.0) to (8575/1 - 1s - loss: 0.0076 - accuracy: 1.0000 - Loss: 0.007793251844313072, Accuracy: 1.0) which is about 0 difference. 
# If you were to implement a different model to solve this classification problem, which would you choose? Why?
If I had to implement a different model to solve this classification problem, I would have used logistic regression because of the fact that neural networks are way more susceptible to overfitting as it states in the module work and thus more room for inaccurate readings whereas the logistic regression model is less flexible making sure the overfitting of the data is not an issue and usually comes back more accurate but with less layers than the neural networks on average.